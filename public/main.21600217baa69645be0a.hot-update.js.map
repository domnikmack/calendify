{"version":3,"file":"main.21600217baa69645be0a.hot-update.js","sources":["webpack:///./src/App.css","webpack:///./node_modules/css-loader/lib/css-base.js"],"sourcesContent":["exports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":root {\\n  --bg-lighter: #8CA2CF;\\n  --bg-darker: #010102;\\n}\\n\\nhtml {\\n  font-size: 14px;\\n  height: 100%;\\n  background-color: var(--bg-lighter);\\n  background-image: linear-gradient (var(--bg-lighter), var(--bg-darker));\\n  background: var(--bg-lighter);\\n  background: linear-gradient(var(--bg-lighter), var(--bg-darker));\\n  background-attachment: fixed;\\n\\n}\\n\\nbody {\\n  margin: 0;\\n  color: white;\\n}\\n\\n.app {\\n  font-family: Arial, Helvetica, sans-serif;\\n\\n}\\n\\n.header {\\n  height: 4em;\\n  background-color: #303644;\\n  padding: 0 10%;\\n  display: flex;\\n  align-items: center;\\n  position: sticky;\\n}\\n\\n.header-icon {\\n  font-size: 2em;\\n  margin: 0 .5em 0 0;\\n}\\n\\n.header h1 {\\n  margin: 0;\\n  width: 80vw;\\n\\n}\\n\\n.main {\\n  margin: 2rem auto;\\n  max-width: 80vw;\\n}\\n\\n.calgrid {\\n  display: grid;\\n  grid-template-columns: 12.5em 12.5em 12.5em 12.5em 12.5em 12.5em 12.5em;\\n  grid-template-rows: 2em 12.5em 12.5em 12.5em 12.5m 12.5em;\\n  grid-row-gap: 1.4rem;\\n  justify-content: space-between;\\n  margin: 0;\\n  padding: 0;\\n}\\n\\n.month {\\n  margin: 1rem 0;\\n  color: white;\\n\\n}\\n\\n.weekday {\\n  color: #0D0F13;\\n  padding: 0;\\n  margin: 0;\\n}\\n\\n.day {\\n  /* background-color: rgba(255,255,255, 0.8); */\\n  width: auto;\\n  height: 10rem;\\n  margin: 0;\\n  padding: .3rem;\\n  font-size: 1rem;\\n  font-weight: bold;\\n  background-color: rgba(255,255,255, 0.4);\\n  color: white;\\n  box-shadow: 5px 5px 10px 1px rgba(0, 0, 0, .3);\\n  cursor: pointer;\\n}\\n\\n.day-number {\\n  margin: 0;\\n}\\n\\n.event-month-view {\\n  margin: .3em 0;\\n  font-weight: normal;\\n  font-size: .9em;\\n  list-style: none;\\n  padding: 0;\\n\\n}\\n\\n.single-event {\\n  margin: .1em 0;\\n  padding: .1em .1em ;\\n  border-radius: .2em;\\n  transition: background-color 0.3s ease;\\n  cursor: default;\\n}\\n\\n.single-event:hover {\\n  background-color: #21252F;\\n}\\n\\n.event-icons {\\n  float: right;\\n  font-size: .8em;\\n  visibility: hidden;\\n  transition: visibilty 0.3s ease;\\n}\\n\\n.event-icons .icon {\\n  margin: 0;\\n  padding: .3em;\\n  cursor: pointer;\\n  border-radius: 5px;\\n  width: 1.2em;\\n  height: 1.2em;\\n  display: inline-block;\\n}\\n\\n.event-icons .icon:hover {\\n  /* margin: 0 .2em; */\\n  cursor: pointer;\\n  background-color: grey;\\n\\n}\\n\\n.single-event:hover svg {\\n  visibility: visible;\\n}\\n\\n\\n.submission-form {\\n  color: var(--bg-darker);\\n  background-color: rgba(255, 255, 255, .9);\\n  height: 30vh;\\n  width: 30vw;\\n  position: absolute;\\n  top: 30%;\\n  left: 30%;\\n  box-shadow: 10px 10px 10px 5px rgba(0, 0, 0, .3);\\n  padding: 10px;\\n}\\n\\n\", \"\"]);\n\n// exports\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}