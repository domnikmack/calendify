{"version":3,"file":"main.63cb46e1f908c3a3f2a8.hot-update.js","sources":["webpack:///src/components/CalGrid.js"],"sourcesContent":["import React, {Component} from 'react';\nimport Day from './Day';\nimport Submission from './Submission';\nimport { connect } from 'react-redux';\nimport { fetchEvents, setCurrentEvent } from '../redux';\n\nconst week = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n\nconst createGridDates = (start, end, lastDayPrev, firstSunNext) => {\n  let dates = [];\n  for (let i = start; i <= lastDayPrev; i++) {\n    dates.push([5, i]);\n  }\n  for (let j = 1; j <= end; j++) {\n    dates.push([6, j]);\n  }\n  for (let k = 1; k <= firstSunNext; k++) {\n    dates.push([7, k]);\n  }\n  return dates;\n}\n\nclass CalGrid extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSubmission: false,\n    };\n    this.openSubmissionForm = this.openSubmissionForm.bind(this);\n    this.closeSubmissionForm = this.closeSubmissionForm.bind(this);\n  }\n\n  openSubmissionForm(evt) {\n    evt.preventDefault();\n    const month = +evt.target.dataset.month;\n    const day = +evt.target.dataset.day;\n    let startTime24 = '09:00';\n    let endTime24 = '10:00';\n    let description = 'New Event';\n    this.props.setCurrentEvent({ month, day, startTime24, endTime24, description })\n    this.setState({\n      showSubmission: true,\n    });\n  }\n\n  closeSubmissionForm() {\n    this.setState({\n      showSubmission: false\n    })\n  }\n\n  componentDidMount() {\n    this.props.fetchEvents();\n  }\n\n  render() {\n    const gridDates = createGridDates(28, 30, 31, 1);\n\n    return (\n      <section>\n      <h2 className=\"month\" >June 2018</h2>\n      <ul className=\"calgrid\">\n        {week.map(day => (<h2\n          className=\"weekday\"\n          key={day}>{day}\n          </h2>))}\n        {gridDates.map(date =>\n          (<Day\n            day={date}\n            events = {this.props.events.filter(event => {\n              return event.day === date[1] && event.month === date[0];\n            })\n            }\n            key={date}\n            openSubmit={this.openSubmissionForm}\n          /> ))}\n\n      </ul>\n      {this.state.showSubmission && <Submission closeSubmit={this.closeSubmissionForm} />}\n      </section>\n    )\n\n  }\n}\n\nconst mapState = state => {\n  return {\n    events: state.events,\n    currentEvent: state.currentEvent\n  }\n};\n\nconst mapDispatch = dispatch => ({\n  fetchEvents() { dispatch(fetchEvents())},\n  setCurrentEvent(event) { dispatch(setCurrentEvent(event))}\n});\n\nexport default connect(mapState, mapDispatch)(CalGrid);\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AADA;AACA;AACA;AACA;AADA;AAGA;AACA;AANA;AAOA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;;;AAEA;AACA;AACA;AADA;AAGA;;;AAEA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAFA;AAAA;AAIA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAPA;AADA;AALA;AAiBA;AAnBA;AAuBA;;;;AA5DA;AACA;AA8DA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAAA;AACA;AAIA;;;;A","sourceRoot":""}